// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_clean_architecture/test/data/repository/movie_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter_clean_architecture/core/network_error.dart' as _i5;
import 'package:flutter_clean_architecture/data/repository/movie_repository_impl.dart'
    as _i3;
import 'package:flutter_clean_architecture/domain/entities/movie.dart' as _i7;
import 'package:flutter_clean_architecture/domain/entities/movie_details.dart'
    as _i8;
import 'package:flutter_clean_architecture/domain/entities/video.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepositoryImpl extends _i1.Mock
    implements _i3.MovieRepositoryImpl {
  MockMovieRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.NetworkError, List<_i6.Video>>> getMovieVideos(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieVideos,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.NetworkError, List<_i6.Video>>>.value(
                _FakeEither_0<_i5.NetworkError, List<_i6.Video>>(
          this,
          Invocation.method(
            #getMovieVideos,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.NetworkError, List<_i6.Video>>>);
  @override
  _i4.Future<_i2.Either<_i5.NetworkError, List<_i7.Movie>>>
      getPopularMovies() => (super.noSuchMethod(
            Invocation.method(
              #getPopularMovies,
              [],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i5.NetworkError, List<_i7.Movie>>>.value(
                    _FakeEither_0<_i5.NetworkError, List<_i7.Movie>>(
              this,
              Invocation.method(
                #getPopularMovies,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.NetworkError, List<_i7.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.NetworkError, _i8.MovieDetails>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.NetworkError, _i8.MovieDetails>>.value(
                _FakeEither_0<_i5.NetworkError, _i8.MovieDetails>(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.NetworkError, _i8.MovieDetails>>);
}
